#include <iostream>
#include <vector>
#include <string>
#include <limits>

using namespace std;

// Structure to store student details
struct Student {
    int id;
    string name;
    double marks;
    char grade;

    // Method to calculate the grade based on marks
    void calculateGrade() {
        if (marks >= 85) grade = 'A';
        else if (marks >= 70) grade = 'B';
        else if (marks >= 50) grade = 'C';
        else if (marks >= 35) grade = 'D';
        else grade = 'F';
    }
};

// Class for Student Management System
class StudentManagementSystem {
private:
    vector<Student> students;  // Vector to hold all student records

public:
    // Add a new student
    void addStudent() {
        Student student;
        cout << "Enter Student ID: ";
        cin >> student.id;
        cin.ignore(); // Ignore newline character left in the buffer
        cout << "Enter Student Name: ";
        getline(cin, student.name);
        cout << "Enter Marks: ";
        cin >> student.marks;

        student.calculateGrade();  // Calculate grade based on marks
        students.push_back(student);
        cout << "Student added successfully!\n";
    }

    // Edit an existing student's details
    void editStudent() {
        int id;
        cout << "Enter the ID of the student to edit: ";
        cin >> id;

        // Find student by ID
        for (auto &student : students) {
            if (student.id == id) {
                cout << "Editing student: " << student.name << endl;
                cout << "Enter new Name: ";
                cin.ignore(); // Ignore newline
                getline(cin, student.name);
                cout << "Enter new Marks: ";
                cin >> student.marks;
                student.calculateGrade();  // Recalculate grade based on new marks
                cout << "Student information updated successfully.\n";
                return;
            }
        }
        cout << "Student with ID " << id << " not found.\n";
    }

    // Delete a student's record
    void deleteStudent() {
        int id;
        cout << "Enter the ID of the student to delete: ";
        cin >> id;

        for (auto it = students.begin(); it != students.end(); ++it) {
            if (it->id == id) {
                students.erase(it);
                cout << "Student with ID " << id << " deleted successfully.\n";
                return;
            }
        }
        cout << "Student with ID " << id << " not found.\n";
    }

    // Display all students' information
    void displayStudents() {
        if (students.empty()) {
            cout << "No student records available.\n";
            return;
        }
        
        for (const auto& student : students) {
            cout << "ID: " << student.id << ", Name: " << student.name 
                 << ", Marks: " << student.marks << ", Grade: " << student.grade << endl;
        }
    }
};

// Main function to handle menu and interaction
int main() {
    StudentManagementSystem sms;
    int choice;

    while (true) {
        // Display the menu
        cout << "\nStudent Management System\n";
        cout << "1. Add Student\n";
        cout << "2. Edit Student\n";
        cout << "3. Delete Student\n";
        cout << "4. Display All Students\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                sms.addStudent();
                break;
            case 2:
                sms.editStudent();
                break;
            case 3:
                sms.deleteStudent();
                break;
            case 4:
                sms.displayStudents();
                break;
            case 5:
                cout << "Exiting the system.\n";
                return 0;
            default:
                cout << "Invalid choice. Please try again.\n";
        }
    }

    return 0;
}
